The ``101-lazy_matrix_mul`` module
==============================

Using ``lazy_matrix_mul``
First import ``lazy_matrix_mul`` from the ``101-lazy_matrix_mul`` module

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

This function takes two arguments which are both matrices and multiplies them and returns the result in a new matrix

    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
    [[ 7 10]
     [15 22]]
    >>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
    [[13 16]]

Matrices are represented by a list of lists of ints or floats
The function will fail with error messages in case of invalid input

Passing non-list arguments
    >>> lazy_matrix_mul('list', [[1, 2]]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: m_a must be a list

    >>> lazy_matrix_mul([[1, 2]], 'list') # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: m_b must be a list

    >>> lazy_matrix_mul([1, 2], [[3, 4]]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: m_a must be a list of lists

    lazy_matrix_mul([[3, 4]], [1, 2]) # Numpy thinks this is legal
    Traceback (most recent call last):
        ...
    ValueError: m_b must be a list of lists

    >>> lazy_matrix_mul() # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty

    >>> lazy_matrix_mul([[1, 2]]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty

    >>> lazy_matrix_mul([[]], [[]]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty

    >>> lazy_matrix_mul([[1, 2]], [[]]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty

    >>> lazy_matrix_mul([['1', '2']], [[3, 4]]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: m_a should contain only integers or floats

    >>> lazy_matrix_mul([[1, 2]], [['a', 'b']]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: m_b should contain only integers or floats

    >>> lazy_matrix_mul([[1, 2], [1, 2, 3]], [[1, 2], [3, 4]]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: each row of m_a must be of the same size

    >>> lazy_matrix_mul([[3, 4], [5, 6]], [[5, 6], [7]]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: each row of m_b must be of the same size

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [4, 5], [6, 7]]) # doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied
