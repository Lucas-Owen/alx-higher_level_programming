The ``100-matrix_mul`` module
==============================

Using ``matrix_mul``
First import ``matrix_mul`` from the ``100-matrix_mul`` module

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

This function takes two arguments which are both matrices and multiplies them and returns the result in a new matrix

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]
    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

Matrices are represented by a list of lists of ints or floats
The function will fail with error messages in case of invalid input

Passing non-list arguments
    >>> matrix_mul('list', [[1, 2]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list

    >>> matrix_mul([[1, 2]], 'list')
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list

    >>> matrix_mul([1, 2], [[3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[3, 4]], [1, 2])
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists


    >>> matrix_mul([[]], [[]])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty

    >>> matrix_mul([[1, 2]], [[]])
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty

    >>> matrix_mul([['1', '2']], [[3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[1, 2]], [['a', 'b']])
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats

    >>> matrix_mul([[1, 2], [1, 2, 3]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size

    >>> matrix_mul([[3, 4], [5, 6]], [[5, 6], [7]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [4, 5], [6, 7]])
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied
