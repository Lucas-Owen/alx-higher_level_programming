The ``0-add_integer`` module
==============================

Using ``add_integer``
First import ``add_integer`` from the ``0-add_integer`` module

    >>> add_integer = __import__('0-add_integer').add_integer

The function takes in two arguments, both integers or floats, the second, which is optional, defaults to 98

    >>> add_integer(2)
    100

Passing in floats would cause the argument to be cast to an integer before evaluation

    >>> add_integer(100.4, -2)
    98
    >>> add_integer(100.5, -2)
    98
    >>> add_integer(100.6, -2)
    98

Other general cases should work just fine

    >>> add_integer(1, 2)
    3
    >>> add_integer(-1, 3)
    2

Passing objects that are not integers or floats would raise an exeption based on the first argument that was not an integer

    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    ValueError: a must be an integer

    >>> add_integer(8, None)
    Traceback (most recent call last):
        ...
    ValueError: b must be an integer
